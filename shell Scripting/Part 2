
#!/bin/bash

# Example: RANDOM USERID (UID)
echo "Random UID: $RANDOM"

# Generating a random number between 1 and 6
NO=$(( RANDOM % 6 + 1 ))
echo "NUMBER is $NO"

#------------------------------------------------------------------------------------------------------

#checking if user is rootor not


if [[ $UID -eq 0 ]]
then 
	echo "User is root"
else 
	echo "user is not root"
fi

#-----------------------------------------------------------------------------------------------------

#Redirect 

#!/bin/bash

# Clean up old logs
rm -f output.log error.log all.log

# 1. Redirect stdout to a file (overwrite)
echo "Script started..." > output.log

# 2. Redirect stderr to a file (simulate error)
ls existing_file.txt 2> error.log      # Will show error in error.log

# 3. Append more stdout to the same file
echo "This is another message." >> output.log

# 4. Redirect both stdout and stderr to same file (overwrite)
ls /etc /fakepath &> all.log

# 5. Append both stdout and stderr to same file
echo "Trying another command..." >> all.log
ls /bin /notreal >> all.log 2>&1

# 6. Here document (input redirection)
cat << EOF > readme.txt
This file was generated by a script.
Generated at: $(date)
EOF

echo "Done. Check output.log, error.log, all.log, and readme.txt"
